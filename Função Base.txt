def detalhes_protocolo(request, protocolo):
    # Buscar as fases com o protocolo fornecido
    fase1 = Fase1.objects.filter(protocolo=protocolo).first()
    fase2 = Fase2.objects.filter(protocolo=protocolo).first()
    fase3 = Fase3.objects.filter(protocolo=protocolo).first()
    fase4 = Fase4.objects.filter(protocolo=protocolo).first()

    # Verificar se todas as fases foram encontradas
    if not any([fase1, fase2, fase3, fase4]):
        messages.error(request, "Protocolo não encontrado ou não tem fases associadas.")
        return render(request, 'atendimentos/detalhes_protocolo.html',
                      {'error': 'Protocolo não encontrado ou não tem fases associadas.'})

    # Se for um pedido POST (atualização dos dados)
    if request.method == 'POST':
        # Criar os formulários com os dados enviados pelo usuário
        form_fase1 = Fase1Form(request.POST, request.FILES, instance=fase1)
        form_fase2 = Fase2Form(request.POST, instance=fase2)
        form_fase3 = Fase3Form(request.POST, instance=fase3)
        form_fase4 = Fase4Form(request.POST, instance=fase4)

        # Verificar se todos os formulários são válidos
        if form_fase1.is_valid() and form_fase2.is_valid() and form_fase3.is_valid() and form_fase4.is_valid():
            # Salvar as alterações no banco de dados
            form_fase1.save()
            form_fase2.save()
            form_fase3.save()
            form_fase4.save()

            # Exibir uma mensagem de sucesso
            messages.success(request, "As alterações foram salvas com sucesso.")
            return redirect('detalhes_protocolo', protocolo=protocolo)  # Redireciona de volta para a página de detalhes

        else:
            # Se algum formulário não for válido, exibir uma mensagem de erro
            messages.error(request, "Por favor, corrija os erros no formulário.")

    else:
        # Se for uma requisição GET, apenas exibe o formulário com os dados atuais
        form_fase1 = Fase1Form(instance=fase1)
        form_fase2 = Fase2Form(instance=fase2)
        form_fase3 = Fase3Form(instance=fase3)
        form_fase4 = Fase4Form(instance=fase4)

    # Renderiza o template com os formulários e os dados das fases
    return render(request, 'atendimentos/detalhes_protocolo.html', {
        'fase1': fase1,
        'fase2': fase2,
        'fase3': fase3,
        'fase4': fase4,
        'protocolo': protocolo,
        'form_fase1': form_fase1,
        'form_fase2': form_fase2,
        'form_fase3': form_fase3,
        'form_fase4': form_fase4
    })